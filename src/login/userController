var userService = require('./userService');
var user=require('./userModel');

var createUserControllerFn=async(req, res) =>
{
    try
    {
        console.log(req.body);
        var status=await userService.createUserDBService(req.body);
        console.log(status);

        if (status)
        {
            res.send({"status":true, "message": "User created successfully"});
        }else{
            res.send({"status":false, "message":"Error creating user"});
        }
    } catch(error){
        console.log(error);
    }
}


var loginUserControllerFn=async(req, res) => {
    var result = null;
    try {
        result=await userService.loginUserDbService(req.body)

        if(result.status){
            res.send({"status":true, "message":result.msg});
        }else{
            res.send({"status":false, "message":result.msg});
        }
        
    } catch (error) {
        console.log(error);
        res.send({"status":false, "message":error.msg});
    }
}

var getUserDataControllerFn = async (req, res) => {
    try {
      // Λάβετε τον αναγνωριστικό χρήστη από το αίτημα (π.χ., req.params.userId)
      const userId = req.params.userId;
  
      // Καλέστε τη συνάρτηση για να ανακτήσετε τα στοιχεία του χρήστη
      const userData = await userService.getUserDataWithoutPasswordDBService(userId);
  
      if (userData) {
        res.send({ "status": true, "userData": userData });
      } else {
        res.send({ "status": false, "message": "User data not found" });
      }
    } catch (err) {
      console.log(err);
      res.send({ "status": false, "message": "Error fetching user data" });
    }
  }
  var getUsers=async(req,res,next)=>{

    try {
        const users= await user.find();

        return res.status(201).json({
            success:true,
            count:users.length,
            data:users
        })


    } catch (error) {
        console.log(error);

        
    }
}

module.exports= {createUserControllerFn, loginUserControllerFn,getUserDataControllerFn,getUsers};